#!/usr/bin/env python3

from functools import reduce
from Crypto.Util.number import inverse

c= 928578955028473644356789381666024062722034323228797183377346332180897385665794462100512294120125788070453011950197291403579469313249177592508136324909989197132327350914252857799764603999027550303640977582887744877827400516692953369103601617550021677081387344442157290361933817649607439353527340724900261160739911528641194691399315963422884183
n = 43427803384841675741795294286614281293038074243773627102620871168909551143168385118055932849082200373801934266814965113401318154516161214551810924318596307428425326637156566851701988189278924286775968204627465227849023498807260126455703099862553535038377216404596223846660693174745490660657995894910041074681671729524939220842907412725891492103
e = 65537

# Normal factorization is too slow
# Use website https://www.alpertron.com.ar/ECM.HTM
# facrtors below
factors = "8623 800013 × 8975 373863 × 9724 224229 × 9938 028509 × 10290 072713 × 10328 337413 × 10370 395489 × 10651 523033 × 10935 315851 × 11033 775793 × 11477 881169 × 12099 578609 × 12249 947209 × 12329 922797 × 12844 488721 × 12974 946793 × 13175 172481 × 13304 314817 × 13364 114299 × 13415 341447 × 14290 992883 × 14353 035209 × 14391 318289 × 14474 135807 × 14541 982717 × 14723 432513 × 14798 973337 × 15042 208169 × 15319 042603 × 15685 462669 × 16061 060441 × 16566 262627 × 16771 550063 × 17085 756097"

factors = list(map(lambda s: int(s), factors.replace(' ', '').split("×")))

tot = reduce(lambda rst, f: rst * (f - 1), factors, 1)
d = inverse(e, tot)

pt = pow(c, d, n)
pt = format(pt, 'x')
pt = [chr(int(pt[i:i+2], 16)) for i in range(0, len(pt), 2)]
pt = "".join(pt)

print(pt)
